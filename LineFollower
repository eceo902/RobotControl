#pragma config(Sensor, in1,    rightLine,      sensorLineFollower)
#pragma config(Sensor, in2,    middleLine,     sensorLineFollower)
#pragma config(Sensor, in3,    leftLine,       sensorLineFollower)
#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl6,  limitSwitch,    sensorTouch)
#pragma config(Sensor, dgtl8,  sonarInput,     sensorSONAR_inch)
#pragma config(Motor,  port1,           leftMotor,     tmotorVex393_HBridge, openLoop, reversed)
#pragma config(Motor,  port10,          rightMotor,    tmotorVex393_HBridge, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*
Project Title:
Team Members:
Date:
Section:


Task Description:


Pseudocode:

*/

task main() {
	while(SensorValue[limitSwitch] == 0)   //Program begins, insert code within curly braces
	{
	}
	wait1Msec(2000);          // The program waits for 2000 milliseconds before continuing.

	int threshold = 300;      /* found by taking a reading on both DARK and LIGHT    */
	/* surfaces, adding them together, then dividing by 2. */
	while(true)
	{
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
		displayLCDCenteredString(0, "LEFT  CNTR  RGHT");        //  Display   |
		displayLCDPos(1,0);                                     //  Sensor    |
		displayNextLCDNumber(SensorValue(leftLine));    //  Readings  |
		displayLCDPos(1,6);                                     //  to LCD.   |
		displayNextLCDNumber(SensorValue(middleLine));  //            |
		displayLCDPos(1,12);                                    //  L  C  R   |
		displayNextLCDNumber(SensorValue(rightLine));   //  x  x  x   |
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -+

		// RIGHT sensor sees dark:
		if(SensorValue(rightLine) < threshold)
		{
			// counter-steer right:
			motor[leftMotor]  = 0;
			motor[rightMotor] = -63;
		}
		// CENTER sensor sees dark:
		if(SensorValue(middleLine) < threshold)
		{
			// go straight
			motor[leftMotor]  = -63;
			motor[rightMotor] = -63;
		}
		// LEFT sensor sees dark:
		if(SensorValue(leftLine) < threshold)
		{
			// counter-steer left:
			motor[leftMotor]  = -63;
			motor[rightMotor] = 0;
		}
	}
}